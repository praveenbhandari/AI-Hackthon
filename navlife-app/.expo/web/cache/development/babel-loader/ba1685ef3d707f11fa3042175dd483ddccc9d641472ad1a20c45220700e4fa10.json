{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar View = require(\"../Components/View/View\");\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\nvar Dimensions = require(\"../Utilities/Dimensions\");\nvar ElementBox = require(\"./ElementBox\");\nvar React = require('react');\nvar InspectorOverlay = function (_React$Component) {\n  function InspectorOverlay() {\n    var _this;\n    _classCallCheck(this, InspectorOverlay);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, InspectorOverlay, [].concat(args));\n    _this.findViewForTouchEvent = function (e) {\n      var _e$nativeEvent$touche = e.nativeEvent.touches[0],\n        locationX = _e$nativeEvent$touche.locationX,\n        locationY = _e$nativeEvent$touche.locationY;\n      _this.props.onTouchPoint(locationX, locationY);\n    };\n    _this.shouldSetResponser = function (e) {\n      _this.findViewForTouchEvent(e);\n      return true;\n    };\n    return _this;\n  }\n  _inherits(InspectorOverlay, _React$Component);\n  return _createClass(InspectorOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var content = null;\n      if (this.props.inspected) {\n        content = _jsx(ElementBox, {\n          frame: this.props.inspected.frame,\n          style: this.props.inspected.style\n        });\n      }\n      return _jsx(View, {\n        onStartShouldSetResponder: this.shouldSetResponser,\n        onResponderMove: this.findViewForTouchEvent,\n        nativeID: \"inspectorOverlay\",\n        style: [styles.inspector, {\n          height: Dimensions.get('window').height\n        }],\n        children: content\n      });\n    }\n  }]);\n}(React.Component);\nvar styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0\n  }\n});\nmodule.exports = InspectorOverlay;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","jsx","_jsx","View","require","StyleSheet","Dimensions","ElementBox","React","InspectorOverlay","_React$Component","_this","_len","arguments","length","args","Array","_key","concat","findViewForTouchEvent","_e$nativeEvent$touche","nativeEvent","touches","locationX","locationY","props","onTouchPoint","shouldSetResponser","key","value","render","content","inspected","frame","style","onStartShouldSetResponder","onResponderMove","nativeID","styles","inspector","height","get","children","Component","create","backgroundColor","position","left","top","right","module","exports"],"sources":["/Users/osheen/Desktop/MSBA/Personal projects/AI-Hackathon/AI-Hackthon/navlife-app/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions');\nconst ElementBox = require('./ElementBox');\nconst React = require('react');\n\ntype Inspected = $ReadOnly<{|\n  frame?: Object,\n  style?: ViewStyleProp,\n|}>;\n\ntype Props = $ReadOnly<{|\n  inspected?: Inspected,\n  onTouchPoint: (locationX: number, locationY: number) => void,\n|}>;\n\nclass InspectorOverlay extends React.Component<Props> {\n  findViewForTouchEvent: (e: PressEvent) => void = (e: PressEvent) => {\n    const {locationX, locationY} = e.nativeEvent.touches[0];\n\n    this.props.onTouchPoint(locationX, locationY);\n  };\n\n  shouldSetResponser: (e: PressEvent) => boolean = (e: PressEvent): boolean => {\n    this.findViewForTouchEvent(e);\n    return true;\n  };\n\n  render(): React.Node {\n    let content = null;\n    if (this.props.inspected) {\n      content = (\n        <ElementBox\n          frame={this.props.inspected.frame}\n          style={this.props.inspected.style}\n        />\n      );\n    }\n\n    return (\n      <View\n        onStartShouldSetResponder={this.shouldSetResponser}\n        onResponderMove={this.findViewForTouchEvent}\n        nativeID=\"inspectorOverlay\" /* TODO: T68258846. */\n        style={[styles.inspector, {height: Dimensions.get('window').height}]}>\n        {content}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = InspectorOverlay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}