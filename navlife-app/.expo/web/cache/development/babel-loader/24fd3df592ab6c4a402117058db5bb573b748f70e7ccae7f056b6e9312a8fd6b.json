{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport SafetyScreen from \"./screens/SafetyScreen\";\nimport TransportScreen from \"./screens/TransportScreen\";\nimport FoodScreen from \"./screens/FoodScreen\";\nimport WeatherScreen from \"./screens/WeatherScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsxs(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n              var iconName;\n              if (route.name === 'Safety') {\n                iconName = focused ? 'shield' : 'shield-outline';\n              } else if (route.name === 'Transport') {\n                iconName = focused ? 'bus' : 'bus-outline';\n              } else if (route.name === 'Food') {\n                iconName = focused ? 'restaurant' : 'restaurant-outline';\n              } else if (route.name === 'Weather') {\n                iconName = focused ? 'partly-sunny' : 'partly-sunny-outline';\n              }\n              return _jsx(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: '#4169e1',\n            tabBarInactiveTintColor: 'gray',\n            headerShown: true,\n            headerTitle: 'NavLife',\n            headerTitleStyle: {\n              fontWeight: 'bold',\n              color: '#4169e1'\n            },\n            headerStyle: {\n              elevation: 0,\n              shadowOpacity: 0,\n              borderBottomWidth: 0\n            }\n          };\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Safety\",\n          component: SafetyScreen\n        }), _jsx(Tab.Screen, {\n          name: \"Transport\",\n          component: TransportScreen\n        }), _jsx(Tab.Screen, {\n          name: \"Food\",\n          component: FoodScreen\n        }), _jsx(Tab.Screen, {\n          name: \"Weather\",\n          component: WeatherScreen\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","SafeAreaProvider","StatusBar","SafetyScreen","TransportScreen","FoodScreen","WeatherScreen","jsx","_jsx","jsxs","_jsxs","Tab","App","children","style","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","headerTitle","headerTitleStyle","fontWeight","headerStyle","elevation","shadowOpacity","borderBottomWidth","Screen","component"],"sources":["/Users/osheen/Desktop/MSBA/Personal projects/AI-Hackathon/AI-Hackthon/navlife-app/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\n\n// Import screens\nimport SafetyScreen from './screens/SafetyScreen';\nimport TransportScreen from './screens/TransportScreen';\nimport FoodScreen from './screens/FoodScreen';\nimport WeatherScreen from './screens/WeatherScreen';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n\n              if (route.name === 'Safety') {\n                iconName = focused ? 'shield' : 'shield-outline';\n              } else if (route.name === 'Transport') {\n                iconName = focused ? 'bus' : 'bus-outline';\n              } else if (route.name === 'Food') {\n                iconName = focused ? 'restaurant' : 'restaurant-outline';\n              } else if (route.name === 'Weather') {\n                iconName = focused ? 'partly-sunny' : 'partly-sunny-outline';\n              }\n\n              return <Ionicons name={iconName} size={size} color={color} />;\n            },\n            tabBarActiveTintColor: '#4169e1',\n            tabBarInactiveTintColor: 'gray',\n            headerShown: true,\n            headerTitle: 'NavLife',\n            headerTitleStyle: {\n              fontWeight: 'bold',\n              color: '#4169e1',\n            },\n            headerStyle: {\n              elevation: 0,\n              shadowOpacity: 0,\n              borderBottomWidth: 0,\n            },\n          })}\n        >\n          <Tab.Screen name=\"Safety\" component={SafetyScreen} />\n          <Tab.Screen name=\"Transport\" component={TransportScreen} />\n          <Tab.Screen name=\"Food\" component={FoodScreen} />\n          <Tab.Screen name=\"Weather\" component={WeatherScreen} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,SAAS,QAAQ,iBAAiB;AAG3C,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AAAgC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,GAAG,GAAGZ,wBAAwB,CAAC,CAAC;AAEtC,eAAe,SAASa,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACP,gBAAgB;IAAAY,QAAA,EACfH,KAAA,CAACZ,mBAAmB;MAAAe,QAAA,GAClBL,IAAA,CAACN,SAAS;QAACY,KAAK,EAAC;MAAM,CAAE,CAAC,EAC1BJ,KAAA,CAACC,GAAG,CAACI,SAAS;QACZC,aAAa,EAAE,SAAfA,aAAaA,CAAAC,IAAA;UAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;UAAA,OAAQ;YAC7BC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA,EAAgC;cAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;gBAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;gBAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;cACjC,IAAIC,QAAQ;cAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,QAAQ,EAAE;gBAC3BD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;cAClD,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,WAAW,EAAE;gBACrCD,QAAQ,GAAGH,OAAO,GAAG,KAAK,GAAG,aAAa;cAC5C,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;gBAChCD,QAAQ,GAAGH,OAAO,GAAG,YAAY,GAAG,oBAAoB;cAC1D,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;gBACnCD,QAAQ,GAAGH,OAAO,GAAG,cAAc,GAAG,sBAAsB;cAC9D;cAEA,OAAOb,IAAA,CAACR,QAAQ;gBAACyB,IAAI,EAAED,QAAS;gBAACD,IAAI,EAAEA,IAAK;gBAACD,KAAK,EAAEA;cAAM,CAAE,CAAC;YAC/D,CAAC;YACDI,qBAAqB,EAAE,SAAS;YAChCC,uBAAuB,EAAE,MAAM;YAC/BC,WAAW,EAAE,IAAI;YACjBC,WAAW,EAAE,SAAS;YACtBC,gBAAgB,EAAE;cAChBC,UAAU,EAAE,MAAM;cAClBT,KAAK,EAAE;YACT,CAAC;YACDU,WAAW,EAAE;cACXC,SAAS,EAAE,CAAC;cACZC,aAAa,EAAE,CAAC;cAChBC,iBAAiB,EAAE;YACrB;UACF,CAAC;QAAA,CAAE;QAAAtB,QAAA,GAEHL,IAAA,CAACG,GAAG,CAACyB,MAAM;UAACX,IAAI,EAAC,QAAQ;UAACY,SAAS,EAAElC;QAAa,CAAE,CAAC,EACrDK,IAAA,CAACG,GAAG,CAACyB,MAAM;UAACX,IAAI,EAAC,WAAW;UAACY,SAAS,EAAEjC;QAAgB,CAAE,CAAC,EAC3DI,IAAA,CAACG,GAAG,CAACyB,MAAM;UAACX,IAAI,EAAC,MAAM;UAACY,SAAS,EAAEhC;QAAW,CAAE,CAAC,EACjDG,IAAA,CAACG,GAAG,CAACyB,MAAM;UAACX,IAAI,EAAC,SAAS;UAACY,SAAS,EAAE/B;QAAc,CAAE,CAAC;MAAA,CAC1C,CAAC;IAAA,CACG;EAAC,CACN,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}