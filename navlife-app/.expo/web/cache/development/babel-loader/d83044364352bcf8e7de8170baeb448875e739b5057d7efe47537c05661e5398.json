{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport RefreshControl from \"../Components/RefreshControl/RefreshControl\";\nimport ScrollView from \"../Components/ScrollView/ScrollView\";\nimport View from \"../Components/View/View\";\nimport Batchinator from \"../Interaction/Batchinator\";\nimport { findNodeHandle } from \"../ReactNative/RendererProxy\";\nimport flattenStyle from \"../StyleSheet/flattenStyle\";\nimport StyleSheet from \"../StyleSheet/StyleSheet\";\nimport clamp from \"../Utilities/clamp\";\nimport infoLog from \"../Utilities/infoLog\";\nimport { CellRenderMask } from \"./CellRenderMask\";\nimport ChildListCollection from \"./ChildListCollection\";\nimport FillRateHelper from \"./FillRateHelper\";\nimport StateSafePureComponent from \"./StateSafePureComponent\";\nimport ViewabilityHelper from \"./ViewabilityHelper\";\nimport CellRenderer from \"./VirtualizedListCellRenderer\";\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from \"./VirtualizedListContext.js\";\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from \"./VirtualizeUtils\";\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ON_END_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\nfunction horizontalOrDefault(horizontal) {\n  return horizontal != null ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender != null ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch != null ? maxToRenderPerBatch : 10;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold != null ? onEndReachedThreshold : 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle != null ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize != null ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\nvar VirtualizedList = function (_StateSafePureCompone) {\n  function VirtualizedList(_props) {\n    var _this$props$updateCel;\n    var _this;\n    _classCallCheck(this, VirtualizedList);\n    _this = _callSuper(this, VirtualizedList, [_props]);\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.getOutermostParentListRef();\n      } else {\n        return _this;\n      }\n    };\n    _this._registerAsNestedChild = function (childList) {\n      _this._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.remove(childList.ref);\n    };\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this._averageCellLength = 0;\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasTriggeredInitialScrollToIndex = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._lastFocusedCellKey = null;\n    _this._nestedChildLists = new ChildListCollection();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this._isNestedWithSameOrientation()) {\n        return _jsx(View, _objectSpread({}, props));\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) != null ? _props$refreshing : 'undefined') + '`');\n        return (_jsx(ScrollView, _objectSpread(_objectSpread({}, props), {}, {\n            refreshControl: props.refreshControl == null ? _jsx(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        return _jsx(ScrollView, _objectSpread({}, props));\n      }\n    };\n    _this._onCellLayout = function (e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: _this._selectOffset(layout),\n        length: _this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = _this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        _this._totalCellLength += next.length - (curr ? curr.length : 0);\n        _this._totalCellsMeasured += curr ? 0 : 1;\n        _this._averageCellLength = _this._totalCellLength / _this._totalCellsMeasured;\n        _this._frames[cellKey] = next;\n        _this._highestMeasuredFrameIndex = Math.max(_this._highestMeasuredFrameIndex, index);\n        _this._scheduleCellsToRenderUpdate();\n      } else {\n        _this._frames[cellKey].inLayout = true;\n      }\n      _this._triggerRemeasureForChildListsInCell(cellKey);\n      _this._computeBlankness();\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n    };\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n      _this.props.onLayout && _this.props.onLayout(e);\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEndReached();\n    };\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasTriggeredInitialScrollToIndex) {\n        if (_this.props.contentOffset == null) {\n          _this.scrollToIndex({\n            animated: false,\n            index: _this.props.initialScrollIndex\n          });\n        }\n        _this._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEndReached();\n    };\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScroll(e);\n      });\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this._scrollMetrics.offset;\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength,\n        zoomScale: zoomScale\n      };\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n      if (!_this.props) {\n        return;\n      }\n      _this._maybeCallOnEndReached();\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n      _this._computeBlankness();\n      _this._scheduleCellsToRenderUpdate();\n    };\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScrollBeginDrag(e);\n      });\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n    _this._onScrollEndDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n      _this._computeBlankness();\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n    _this._onMomentumScrollBegin = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollBegin(e);\n      });\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n    _this._onMomentumScrollEnd = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollEnd(e);\n      });\n      _this._scrollMetrics.velocity = 0;\n      _this._computeBlankness();\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n    _this._updateCellsToRender = function () {\n      _this.setState(function (state, props) {\n        var cellsAroundViewport = _this._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport: cellsAroundViewport,\n          renderMask: renderMask\n        };\n      });\n    };\n    _this._createViewToken = function (index, isViewable, props) {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: _this._keyExtractor(item, index, props),\n        isViewable: isViewable\n      };\n    };\n    _this._getOffsetApprox = function (index, props) {\n      if (Number.isInteger(index)) {\n        return _this.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = _this.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    _this.__getFrameMetricsApprox = function (index, props) {\n      var frame = _this._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n    _this._getFrameMetrics = function (index, props) {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = item && _this._frames[_this._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    _this._getNonViewportRenderRegions = function (props) {\n      if (!(_this._lastFocusedCellKey && _this._cellRefs[_this._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = _this._cellRefs[_this._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n      if (focusedCellIndex >= itemCount || _this._indicesToKeys.get(focusedCellIndex) !== _this._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += _this.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < _this._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += _this.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first: first,\n        last: last\n      }];\n    };\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    invariant(_props.getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, (_this$props$updateCel = _this.props.updateCellsBatchingPeriod) != null ? _this$props$updateCel : 50);\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props = _this.props,\n        onViewableItemsChanged = _this$props.onViewableItemsChanged,\n        viewabilityConfig = _this$props.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    invariant(!_this.context, 'Unexpectedly saw VirtualizedListContext available in ctor');\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    _this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n    return _this;\n  }\n  _inherits(VirtualizedList, _StateSafePureCompone);\n  return _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        horizontal = _this$props2.horizontal,\n        getItemCount = _this$props2.getItemCount,\n        getItemLayout = _this$props2.getItemLayout,\n        onScrollToIndexFailed = _this$props2.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n      var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props3 = this.props,\n        data = _this$props3.data,\n        getItem = _this$props3.getItem,\n        getItemCount = _this$props3.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"_adjustCellsAroundViewport\",\n    value: function _adjustCellsAroundViewport(props, cellsAroundViewport) {\n      var data = props.data,\n        getItemCount = props.getItemCount;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n      this._updateViewableItems(props, cellsAroundViewport);\n      var _this$_scrollMetrics = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics.contentLength,\n        offset = _this$_scrollMetrics.offset,\n        visibleLength = _this$_scrollMetrics.visibleLength;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (visibleLength <= 0 || contentLength <= 0) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      var newCellsAroundViewport;\n      if (props.disableVirtualization) {\n        var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n        newCellsAroundViewport = {\n          first: 0,\n          last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n        };\n      } else {\n        if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n        }\n        newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n        invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n      }\n      if (this._nestedChildLists.size() > 0) {\n        var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n        newCellsAroundViewport.last = childIdx != null ? childIdx : newCellsAroundViewport.last;\n      }\n      return newCellsAroundViewport;\n    }\n  }, {\n    key: \"_findFirstChildWithMore\",\n    value: function _findFirstChildWithMore(first, last) {\n      for (var ii = first; ii <= last; ii++) {\n        var cellKeyForIndex = this._indicesToKeys.get(ii);\n        if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {\n          return childList.hasMore();\n        })) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          ref: this,\n          cellKey: this.context.cellKey\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          ref: this\n        });\n      }\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n      var _this$props4 = this.props,\n        CellRendererComponent = _this$props4.CellRendererComponent,\n        ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n        ListHeaderComponent = _this$props4.ListHeaderComponent,\n        ListItemComponent = _this$props4.ListItemComponent,\n        data = _this$props4.data,\n        debug = _this$props4.debug,\n        getItem = _this$props4.getItem,\n        getItemCount = _this$props4.getItemCount,\n        getItemLayout = _this$props4.getItemLayout,\n        horizontal = _this$props4.horizontal,\n        renderItem = _this$props4.renderItem;\n      var stickyOffset = ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop() {\n        var item = getItem(data, ii);\n        var key = _this2._keyExtractor(item, ii, _this2.props);\n        _this2._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        cells.push(_jsx(CellRenderer, {\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          ListItemComponent: ListItemComponent,\n          cellKey: key,\n          debug: debug,\n          fillRateHelper: _this2._fillRateHelper,\n          getItemLayout: getItemLayout,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          prevCellKey: prevCellKey,\n          onCellLayout: _this2._onCellLayout,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onCellFocusCapture: function onCellFocusCapture(e) {\n            return _this2._onCellFocusCapture(key);\n          },\n          onUnmount: _this2._onCellUnmount,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          },\n          renderItem: renderItem\n        }, key));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index, props) {\n      if (props.keyExtractor != null) {\n        return props.keyExtractor(item, index);\n      }\n      var key = defaultKeyExtractor(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (__DEV__) {\n        var flatStyles = flattenStyle(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n        }\n      }\n      var _this$props5 = this.props,\n        ListEmptyComponent = _this$props5.ListEmptyComponent,\n        ListFooterComponent = _this$props5.ListFooterComponent,\n        ListHeaderComponent = _this$props5.ListHeaderComponent;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        horizontal = _this$props6.horizontal;\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var _element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : _jsx(ListHeaderComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          children: _jsx(View, {\n            onLayout: this._onLayoutHeader,\n            style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n            children: _element\n          })\n        }, \"$header\"));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount === 0 && ListEmptyComponent) {\n        var _element2 = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : _jsx(ListEmptyComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-empty',\n          children: React.cloneElement(_element2, {\n            onLayout: function onLayout(event) {\n              _this3._onLayoutEmpty(event);\n              if (_element2.props.onLayout) {\n                _element2.props.onLayout(event);\n              }\n            },\n            style: StyleSheet.compose(inversionStyle, _element2.props.style)\n          })\n        }, \"$empty\"));\n      }\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var renderRegions = this.state.renderMask.enumerateRegions();\n        var lastSpacer = findLastWhere(renderRegions, function (r) {\n          return r.isSpacer;\n        });\n        for (var section of renderRegions) {\n          if (section.isSpacer) {\n            if (this.props.disableVirtualization) {\n              continue;\n            }\n            var isLastSpacer = section === lastSpacer;\n            var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n            var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n            var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n            var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n            var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n            cells.push(_jsx(View, {\n              style: _defineProperty({}, spacerKey, spacerSize)\n            }, \"$spacer-\" + section.first));\n          } else {\n            this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n          }\n        }\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n      }\n      if (ListFooterComponent) {\n        var _element3 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : _jsx(ListFooterComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          children: _jsx(View, {\n            onLayout: this._onLayoutFooter,\n            style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n            children: _element3\n          })\n        }, \"$footer\"));\n      }\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n      this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n      var innerRet = _jsx(VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        },\n        children: React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n          ref: this._captureScrollRef\n        }, cells)\n      });\n      var ret = innerRet;\n      if (__DEV__) {\n        ret = _jsx(ScrollView.Context.Consumer, {\n          children: function children(scrollContext) {\n            if (scrollContext != null && !scrollContext.horizontal === !horizontalOrDefault(_this3.props.horizontal) && !_this3._hasWarned.nesting && _this3.context == null && _this3.props.scrollEnabled !== false) {\n              console.error('VirtualizedLists should never be nested inside plain ScrollViews with the same ' + 'orientation because it can break windowing and other functionality - use another ' + 'VirtualizedList-backed container instead.');\n              _this3._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }\n        });\n      }\n      if (this.props.debug) {\n        return _jsxs(View, {\n          style: styles.debug,\n          children: [ret, this._renderDebugOverlay()]\n        });\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n        data = _this$props7.data,\n        extraData = _this$props7.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellFocusCapture\",\n    value: function _onCellFocusCapture(cellKey) {\n      this._lastFocusedCellKey = cellKey;\n      var renderMask = VirtualizedList._createRenderMask(this.props, this.state.cellsAroundViewport, this._getNonViewportRenderRegions(this.props));\n      this.setState(function (state) {\n        if (!renderMask.equals(state.renderMask)) {\n          return {\n            renderMask: renderMask\n          };\n        }\n        return null;\n      });\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      this._nestedChildLists.forEachInCell(cellKey, function (childList) {\n        childList.measureLayoutRelativeToContainingList();\n      });\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());\n          var metricsChanged = _this4._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this4._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this4._scrollMetrics.offset = scrollMetrics.offset;\n            _this4._nestedChildLists.forEach(function (childList) {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this.__getFrameMetricsApprox(ii, this.props);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n      var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return _jsxs(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        children: [framesInLayout.map(function (f, ii) {\n          return _jsx(View, {\n            style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n              top: f.offset * normalize,\n              height: f.length * normalize\n            }]\n          }, 'f' + ii);\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n            top: windowTop * normalize,\n            height: windowLen * normalize\n          }]\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n            top: visTop * normalize,\n            height: visLen * normalize\n          }]\n        })]\n      });\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEndReached\",\n    value: function _maybeCallOnEndReached() {\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        getItemCount = _this$props8.getItemCount,\n        onEndReached = _this$props8.onEndReached,\n        onEndReachedThreshold = _this$props8.onEndReachedThreshold;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (distanceFromEnd < ON_END_REACHED_EPSILON) {\n        distanceFromEnd = 0;\n      }\n      var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n      if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && distanceFromEnd <= threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (distanceFromEnd > threshold) {\n        this._sentEndForContentLength = 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state$cellsArou = this.state.cellsAroundViewport,\n        first = _this$state$cellsArou.first,\n        last = _this$state$cellsArou.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      var scrollingThreshold = onEndReachedThreshold * visibleLength / 2;\n      if (first > 0) {\n        var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n        hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n      }\n      if (last >= 0 && last < itemCount - 1) {\n        var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n        hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(props, cellsAroundViewport) {\n      var _this5 = this;\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(props, _this5._scrollMetrics.offset, _this5._scrollMetrics.visibleLength, _this5._getFrameMetrics, _this5._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n      });\n    }\n  }], [{\n    key: \"_createRenderMask\",\n    value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n      var itemCount = props.getItemCount(props.data);\n      invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n      var renderMask = new CellRenderMask(itemCount);\n      if (itemCount > 0) {\n        var allRegions = [cellsAroundViewport].concat(_toConsumableArray(additionalRegions != null ? additionalRegions : []));\n        for (var region of allRegions) {\n          renderMask.addCells(region);\n        }\n        if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n          var initialRegion = VirtualizedList._initialRenderRegion(props);\n          renderMask.addCells(initialRegion);\n        }\n        var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n        VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n      }\n      return renderMask;\n    }\n  }, {\n    key: \"_initialRenderRegion\",\n    value: function _initialRenderRegion(props) {\n      var _props$initialScrollI;\n      var itemCount = props.getItemCount(props.data);\n      var scrollIndex = Math.floor(Math.max(0, (_props$initialScrollI = props.initialScrollIndex) != null ? _props$initialScrollI : 0));\n      return {\n        first: scrollIndex,\n        last: Math.min(itemCount, scrollIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1\n      };\n    }\n  }, {\n    key: \"_ensureClosestStickyHeader\",\n    value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n      var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n      for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n        if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n          renderMask.addCells({\n            first: itemIdx,\n            last: itemIdx\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var itemCount = newProps.getItemCount(newProps.data);\n      if (itemCount === prevState.renderMask.numCells()) {\n        return prevState;\n      }\n      var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n      return {\n        cellsAroundViewport: constrainedCells,\n        renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n      };\n    }\n  }, {\n    key: \"_constrainToItemCount\",\n    value: function _constrainToItemCount(cells, props) {\n      var itemCount = props.getItemCount(props.data);\n      var last = Math.min(itemCount - 1, cells.last);\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n      return {\n        first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n        last: last\n      };\n    }\n  }]);\n}(StateSafePureComponent);\nVirtualizedList.contextType = VirtualizedListContext;\nexport { VirtualizedList as default };\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});","map":{"version":3,"names":["RefreshControl","ScrollView","View","Batchinator","findNodeHandle","flattenStyle","StyleSheet","clamp","infoLog","CellRenderMask","ChildListCollection","FillRateHelper","StateSafePureComponent","ViewabilityHelper","CellRenderer","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","computeWindowedRenderLimits","keyExtractor","defaultKeyExtractor","invariant","React","jsx","_jsx","jsxs","_jsxs","ON_END_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","i","length","VirtualizedList","_StateSafePureCompone","props","_this$props$updateCel","_this","_classCallCheck","_callSuper","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","forEach","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","zoomScale","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","_objectSpread","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellLayout","e","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","scrollToIndex","animated","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","setState","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","data","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemCount","getItemLayout","lastFocusedCellRenderer","focusedCellIndex","itemCount","get","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","_this$props","push","initialRenderRegion","_initialRenderRegion","_inherits","_createClass","value","scrollToEnd","params","veryLast","scrollTo","console","warn","x","y","_this$props2","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props3","scrollToOffset","t","flashScrollIndicators","getScrollResponder","getScrollableNode","getScrollRef","setNativeProps","_getCellKey","_this$context","hasMore","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","min","abs","EPSILON","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","set","has","undefined","fillRateHelper","onCellLayout","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","nestedContext","String","type","displayName","render","_this3","__DEV__","flatStyles","contentContainerStyle","flexWrap","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","children","style","compose","ListHeaderComponentStyle","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","r","isSpacer","section","isLastSpacer","constrainToMeasured","firstMetrics","lastMetrics","spacerSize","_defineProperty","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","scrollEnabled","error","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this4","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onEndReached","_this$_scrollMetrics2","threshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","schedule","_this5","onUpdate","additionalRegions","allRegions","concat","_toConsumableArray","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","scrollIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","numCells","constrainedCells","contextType","default","create","transform","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"sources":["/Users/osheen/Desktop/MSBA/Personal projects/AI-Hackathon/AI-Hackthon/navlife-app/node_modules/react-native/Libraries/Lists/VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {LayoutEvent, ScrollEvent} from '../Types/CoreEventTypes';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  FrameMetricProps,\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\n\nimport RefreshControl from '../Components/RefreshControl/RefreshControl';\nimport ScrollView from '../Components/ScrollView/ScrollView';\nimport View from '../Components/View/View';\nimport Batchinator from '../Interaction/Batchinator';\nimport {findNodeHandle} from '../ReactNative/RendererProxy';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_END_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\nfunction findLastWhere<T>(\n  arr: $ReadOnlyArray<T>,\n  predicate: (element: T) => boolean,\n): T | null {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nexport default class VirtualizedList extends StateSafePureComponent<\n  Props,\n  State,\n> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    const offset =\n      Math.max(\n        0,\n        this._getOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(props.windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      props.getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    invariant(\n      !this.context,\n      'Unexpectedly saw VirtualizedListContext available in ctor',\n    );\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n    };\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const scrollIndex = Math.floor(Math.max(0, props.initialScrollIndex ?? 0));\n\n    return {\n      first: scrollIndex,\n      last:\n        Math.min(\n          itemCount,\n          scrollIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n        ) - 1,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    this._updateViewableItems(props, cellsAroundViewport);\n\n    const {contentLength, offset, visibleLength} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n      // So let's wait until we've scrolled the view to the right place. And until then,\n      // we will trust the initialScrollIndex suggestion.\n\n      // Thus, we want to recalculate the windowed render limits if any of the following hold:\n      // - initialScrollIndex is undefined or is 0\n      // - initialScrollIndex > 0 AND scrolling is complete\n      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\n      //   where the list is shorter than the visible area)\n      if (\n        props.initialScrollIndex &&\n        !this._scrollMetrics.offset &&\n        Math.abs(distanceFromEnd) >= Number.EPSILON\n      ) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this.__getFrameMetricsApprox,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = this._keyExtractor(item, ii, this.props);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          debug={debug}\n          fillRateHelper={this._fillRateHelper}\n          getItemLayout={getItemLayout}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onCellLayout={this._onCellLayout}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={e => this._onCellFocusCapture(key)}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const last = Math.min(itemCount - 1, cells.last);\n\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last,\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n    // $FlowFixMe[missing-local-annot]\n  ) {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n      }\n    }\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._highestMeasuredFrameIndex,\n              )\n            : section.last;\n\n          const firstMetrics = this.__getFrameMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _frames: {\n    [string]: {\n      inLayout?: boolean,\n      index: number,\n      length: number,\n      offset: number,\n    },\n  } = {};\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  // $FlowFixMe[missing-local-annot]\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (e: LayoutEvent, cellKey: string, index: number): void => {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture(cellKey: string) {\n    this._lastFocusedCellKey = cellKey;\n    const renderMask = VirtualizedList._createRenderMask(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._getNonViewportRenderRegions(this.props),\n    );\n\n    this.setState(state => {\n      if (!renderMask.equals(state.renderMask)) {\n        return {renderMask};\n      }\n      return null;\n    });\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {data, getItemCount, onEndReached, onEndReachedThreshold} =\n      this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    let distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distanceFromEnd values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the \"end\" of the list with a distanceFromEnd approximating 0 but not quite there.\n    if (distanceFromEnd < ON_END_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2 when oERT is not present\n    const threshold =\n      onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      distanceFromEnd <= threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        this.scrollToIndex({\n          animated: false,\n          index: this.props.initialScrollIndex,\n        });\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    const scrollingThreshold = (onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this.__getFrameMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: FrameMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: this._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  /**\n   * Gets an approximate offset to an item at a given index. Supports\n   * fractional indices.\n   */\n  _getOffsetApprox = (index: number, props: FrameMetricProps): number => {\n    if (Number.isInteger(index)) {\n      return this.__getFrameMetricsApprox(index, props).offset;\n    } else {\n      const frameMetrics = this.__getFrameMetricsApprox(\n        Math.floor(index),\n        props,\n      );\n      const remainder = index - Math.floor(index);\n      return frameMetrics.offset + remainder * frameMetrics.length;\n    }\n  };\n\n  __getFrameMetricsApprox: (\n    index: number,\n    props: FrameMetricProps,\n  ) => {\n    length: number,\n    offset: number,\n    ...\n  } = (index, props) => {\n    const frame = this._getFrameMetrics(index, props);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {data, getItemCount, getItemLayout} = props;\n      invariant(\n        index >= 0 && index < getItemCount(data),\n        'Tried to get frame for out of range index ' + index,\n      );\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n    props: FrameMetricProps,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItem, getItemCount, getItemLayout} = props;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    const frame = item && this._frames[this._keyExtractor(item, index, props)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n         * suppresses an error found when Flow v0.63 was deployed. To see the error\n         * delete this comment and run Flow. */\n        return getItemLayout(data, index);\n      }\n    }\n    return frame;\n  };\n\n  _getNonViewportRenderRegions = (\n    props: FrameMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The cell may have been unmounted and have a stale index\n    if (\n      focusedCellIndex >= itemCount ||\n      this._indicesToKeys.get(focusedCellIndex) !== this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: FrameMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}