/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../index";
export interface CompletionCreateParamsNonStreaming {
    messages: Letta.CompletionCreateParamsNonStreamingMessagesItem[];
    model: Letta.CompletionCreateParamsNonStreamingModel;
    audio?: Letta.ChatCompletionAudioParam;
    frequencyPenalty?: number;
    functionCall?: Letta.CompletionCreateParamsNonStreamingFunctionCall;
    functions?: Letta.OpenaiTypesChatCompletionCreateParamsFunction[];
    logitBias?: Record<string, number | undefined>;
    logprobs?: boolean;
    maxCompletionTokens?: number;
    maxTokens?: number;
    metadata?: Record<string, string | undefined>;
    modalities?: Letta.CompletionCreateParamsNonStreamingModalitiesItem[];
    n?: number;
    parallelToolCalls?: boolean;
    prediction?: Letta.ChatCompletionPredictionContentParam;
    presencePenalty?: number;
    reasoningEffort?: Letta.CompletionCreateParamsNonStreamingReasoningEffort;
    responseFormat?: Letta.CompletionCreateParamsNonStreamingResponseFormat;
    seed?: number;
    serviceTier?: Letta.CompletionCreateParamsNonStreamingServiceTier;
    stop?: Letta.CompletionCreateParamsNonStreamingStop;
    store?: boolean;
    streamOptions?: Letta.ChatCompletionStreamOptionsParam;
    temperature?: number;
    toolChoice?: Letta.CompletionCreateParamsNonStreamingToolChoice;
    tools?: Letta.ChatCompletionToolParam[];
    topLogprobs?: number;
    topP?: number;
    user?: string;
    webSearchOptions?: Letta.WebSearchOptions;
    stream?: boolean;
}
